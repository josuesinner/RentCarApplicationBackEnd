// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentCarApplication.DB;

#nullable disable

namespace RentCarApplication.Migrations
{
    [DbContext(typeof(DB_Context))]
    [Migration("20230127205649_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RentCarApplication.DTOs.Cliente", b =>
                {
                    b.Property<int>("Id_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Cliente"));

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Limite_Credito")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Límite_Credito");

                    b.Property<string>("No_Tarjeta_CR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_Persona")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Cliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Combustible", b =>
                {
                    b.Property<int>("Id_Combustible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Combustible"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("Id_Combustible");

                    b.ToTable("Combustibles");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Empleado", b =>
                {
                    b.Property<int>("Id_Empleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Empleado"));

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Ingreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Porciento_Comision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tanda_Labor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Empleado");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Inspeccion", b =>
                {
                    b.Property<int>("Id_Transaccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Transaccion"));

                    b.Property<string>("Cantidad_Combustible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("DerFrontal")
                        .HasColumnType("bit");

                    b.Property<bool>("DerTrasera")
                        .HasColumnType("bit");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Etc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Goma_respuesta")
                        .HasColumnType("bit");

                    b.Property<bool>("IzqFrontal")
                        .HasColumnType("bit");

                    b.Property<bool>("IzqTrasera")
                        .HasColumnType("bit");

                    b.Property<bool>("Roturas_cristal")
                        .HasColumnType("bit");

                    b.Property<bool>("Tiene_Gato")
                        .HasColumnType("bit");

                    b.Property<bool>("Tiene_Ralladuras")
                        .HasColumnType("bit");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id_Transaccion");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Inspeccions");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Marcas", b =>
                {
                    b.Property<int>("Id_Marca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Marca"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("Id_Marca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Modelos", b =>
                {
                    b.Property<int>("Id_Modelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Modelo"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.HasKey("Id_Modelo");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Renta_Devolucion", b =>
                {
                    b.Property<int>("No_Renta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No_Renta"));

                    b.Property<int>("Cantidad_dias")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Devolucion")
                        .HasColumnType("bit");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Devolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Renta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Monto_Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("No_Renta");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Renta_Devolucions");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Tipo_Vehiculo", b =>
                {
                    b.Property<int>("Id_Tipo_Vehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Tipo_Vehiculo"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("Id_Tipo_Vehiculo");

                    b.ToTable("Tipo_Vehiculos");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Vehiculo", b =>
                {
                    b.Property<int>("Id_Vehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Vehiculo"));

                    b.Property<int>("CombustibleId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descripción");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<int>("ModeloId")
                        .HasColumnType("int");

                    b.Property<string>("No_Chasis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No_Motor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No_Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo_VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id_Vehiculo");

                    b.HasIndex("CombustibleId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.HasIndex("Tipo_VehiculoId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Inspeccion", b =>
                {
                    b.HasOne("RentCarApplication.DTOs.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarApplication.DTOs.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarApplication.DTOs.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Modelos", b =>
                {
                    b.HasOne("RentCarApplication.DTOs.Marcas", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Renta_Devolucion", b =>
                {
                    b.HasOne("RentCarApplication.DTOs.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarApplication.DTOs.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarApplication.DTOs.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("RentCarApplication.DTOs.Vehiculo", b =>
                {
                    b.HasOne("RentCarApplication.DTOs.Combustible", "Tipo_Combustible")
                        .WithMany()
                        .HasForeignKey("CombustibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarApplication.DTOs.Marcas", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarApplication.DTOs.Modelos", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RentCarApplication.DTOs.Tipo_Vehiculo", "Tipo_Vehiculo")
                        .WithMany()
                        .HasForeignKey("Tipo_VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Modelo");

                    b.Navigation("Tipo_Combustible");

                    b.Navigation("Tipo_Vehiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
